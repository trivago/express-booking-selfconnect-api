{
    "openapi": "3.0.0",
    "info": {
        "title": "Trivago Express Booking API",
        "description": "Trivago Express Booking API",
        "contact": {
            "email": "api@trivago.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "{schema}://advertiser-site.com/api_implementation",
            "description": "Booking availability",
            "variables": {
                "schema": {
                    "enum": [
                        "https",
                        "http"
                    ],
                    "default": "https"
                }
            }
        }
    ],
    "paths": {
        "/booking_availability": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Trivago Express Booking API",
                "description": "To check if an advertised offer is still bookable trivago sends out \"/booking_availability\" POST requests to the advertiser's API. When the booking availability results are returned, they are presented to the user on the trivago Express Booking landing page opened in an additional browser window. The user can then choose the offer they want to book. Please click on one of the flags below to see how the trivago Express Booking landing page would look like for the corresponding point of sale.",
                "operationId": "booking-availability",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/booking-availability-request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking Availability Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/booking-availability-response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/booking_prepare": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Trivago Express Booking API",
                "description": "If advertisers cannot provide non-cached rates or all required information (e.g. cancellation policy) in the booking_availability, trivago can optionally submit a \"/booking_prepare\" POST request to the advertiser's API. This request is submitted once users have selected a room after viewing the booking availability results and are being redirected to the trivago Express Booking checkout page where they fill in their details being mandatory to make a booking.",
                "operationId": "booking-prepare",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/booking-prepare-request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking Prepare Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/booking-prepare-response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/booking_submit": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Trivago Express Booking API",
                "description": "To submit a booking, trivago sends out a \"/booking_submit\" POST request to the advertiser's API. Once users have selected a room after viewing the booking availability results, they go to the next step of the booking process where they fill in their details being mandatory to make a booking. These details are then sent to the advertiser's endpoint as part of the booking submit request.",
                "operationId": "booking-submit",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/booking-submit-request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking Submit Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/booking-submit-response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/booking_payment_authorise": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Trivago Express Booking API",
                "description": "If additional information is needed to authorise a booking, trivago sends out a \"/booking_payment_authorise\" POST request to the advertiser's API.",
                "operationId": "booking-payment-authorise",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/booking-payment-authorise-request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking Payment Authorise Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/booking-payment-authorise-response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/booking_verify": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Trivago Express Booking API",
                "description": "In order to check if a booking has been submitted successfully, trivago also offers the possibility to immediately verify the booking status once the booking has been confirmed by sending an additional \"/booking_verify\" request.\nBesides this, the **\"/booking_verify\"** GET request can be used to update trivago about any changes of the booking that have occurred on the hotel/property system. So in an upcoming feature where the booking status of a booking submitted via trivago Express booking, trivago will send out daily a \"/booking_verify\" GET request to the advertiser's API in order to verify which bookings have actually been consumed, cancelled or modified.\nSo for example, if a user decides to cancel a tEB booking over the customer service hotline, trivago would be able to update the booking status by doing daily \"/booking_verify\" requests.",
                "operationId": "booking-verify",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/reference_id"
                    },
                    {
                        "$ref": "#/components/parameters/reservation_id"
                    },
                    {
                        "$ref": "#/components/parameters/partner_reference"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking Verify Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/booking-verify-response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/booking_cancel": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Trivago Express Booking API",
                "description": "In an upcoming feature, users will be able to cancel a booking through the trivago member area. Trivago will then send out a \"/booking_cancel\" POST request to the advertiser's API.",
                "operationId": "booking-cancel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/booking-cancel-request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking Cancellation Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/booking-cancel-response"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        }
    },
    "components": {
        "schemas": {
            "booking-availability-request": {
                "title": "Booking Availability Request",
                "description": "Schema of booking availability request object",
                "required": [
                    "api_version",
                    "hotel",
                    "start_date",
                    "end_date",
                    "party",
                    "lang",
                    "currency",
                    "user_country"
                ],
                "properties": {
                    "api_version": {
                        "description": "Version of the API used.",
                        "type": "integer",
                        "example": 1
                    },
                    "hotel": {
                        "$ref": "#/components/schemas/hotel"
                    },
                    "start_date": {
                        "description": "The user's check-in date in YYYY-MM-DD",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-01"
                    },
                    "end_date": {
                        "description": "The user's check-out date in YYYY-MM-DD",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-02"
                    },
                    "party": {
                        "description": "Array of JSON objects inlcuding number of adults and children requested.\nEach party object represents the occupation for a separate room.\nFor example, \"party\":[{\"adults\": 3}] is a request for one room that accommodates three adults,\nor \"party\":[{\"adults\": 2},{\"adults\": 2, \"children\": [11,8]}] is a request for one room for two adults\nand one room for two adults and two children aged 11 and 8.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/party"
                        },
                        "minItems": 1
                    },
                    "lang": {
                        "description": "Language code (see Supported Languages)[http://developer.trivago.com/expressbooking/supported-languages.html], which identifies the corresponding language and POS.",
                        "type": "string",
                        "example": "en_US"
                    },
                    "currency": {
                        "description": "ISO 4217 currency code. All prices, taxes, fees, and discount amounts should be returned in this requested currency.",
                        "type": "string",
                        "example": "USD"
                    },
                    "user_country": {
                        "description": "ISO 3166-1 alpha-2 country code corresponding to the user making this request.",
                        "type": "string",
                        "example": "US"
                    }
                },
                "type": "object"
            },
            "booking-availability-response-success": {
                "title": "Booking Availability Ok",
                "description": "Schema Booking availability when response is OK",
                "required": [
                    "api_version",
                    "hotel_id",
                    "start_date",
                    "end_date",
                    "party",
                    "lang",
                    "user_country",
                    "room_types_array",
                    "customer_support"
                ],
                "properties": {
                    "api_version": {
                        "description": "Version of the API used.",
                        "type": "integer",
                        "example": 1
                    },
                    "customer_support": {
                        "$ref": "#/components/schemas/customer-support"
                    },
                    "hotel_id": {
                        "description": "Echo the item_id (not partner_reference) provided by trivago in the corresponding request.",
                        "type": "integer"
                    },
                    "room_types_array": {
                        "description": "An array of objects detailing the different kinds of rooms that are available for the entire party.\nThe short description must be unique for each room type available in the hotel.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/room-type"
                        }
                    },
                    "hotel_details": {
                        "$ref": "#/components/schemas/hotel-details"
                    },
                    "accepted_credit_cards": {
                        "description": "Accepted Credit Cards",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "terms_and_conditions": {
                        "description": "General terms and conditions.\nText field.\nLength limit of 1000 characters.",
                        "type": "string"
                    },
                    "terms_and_conditions_url": {
                        "description": "Link to the advertiser's terms and conditions page.",
                        "type": "string"
                    },
                    "payment_policy": {
                        "description": "Describes how the advertiser will use the credit card information, e.g. charged immediately or hold.\nText field.\nLength limit of 1000 characters.",
                        "type": "string"
                    },
                    "other_policy": {
                        "description": "Miscellaneous policies\nText field.\nLength limit of 1000 characters.",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Array of errors",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/error"
                        }
                    },
                    "query_key": {
                        "description": "Query Key",
                        "type": "string",
                        "deprecated": true
                    },
                    "device_type": {
                        "description": "Device Type",
                        "type": "string",
                        "deprecated": true
                    },
                    "start_date": {
                        "description": "The user's check-in date in YYYY-MM-DD",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-01"
                    },
                    "end_date": {
                        "description": "The user's check-out date in YYYY-MM-DD",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-02"
                    },
                    "party": {
                        "description": "Array of JSON objects inlcuding number of adults and children requested.\nEach party object represents the occupation for a separate room.\nFor example, \"party\":[{\"adults\": 3}] is a request for one room that accommodates three adults,\nor \"party\":[{\"adults\": 2},{\"adults\": 2, \"children\": [11,8]}] is a request for one room for two adults\nand one room for two adults and two children aged 11 and 8.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/party"
                        },
                        "minItems": 1
                    },
                    "lang": {
                        "description": "Language code (see Supported Languages)[http://developer.trivago.com/expressbooking/supported-languages.html], which identifies the corresponding language and POS.",
                        "type": "string",
                        "example": "en_US"
                    },
                    "currency": {
                        "description": "ISO 4217 currency code. All prices, taxes, fees, and discount amounts should be returned in this requested currency.",
                        "type": "string",
                        "example": "USD"
                    },
                    "user_country": {
                        "description": "ISO 3166-1 alpha-2 country code corresponding to the user making this request.",
                        "type": "string",
                        "example": "US"
                    }
                },
                "type": "object"
            },
            "booking-availability-response": {
                "title": "Booking Availability",
                "description": "Schema of an booking availability.",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/booking-availability-response-success"
                    },
                    {
                        "$ref": "#/components/schemas/error-response"
                    }
                ]
            },
            "booking-cancel-request": {
                "description": "Schema of booking cancel request object",
                "required": [
                    "partner_reference",
                    "reservation_id"
                ],
                "properties": {
                    "reservation_id": {
                        "description": "The advertiser's unique id for this reservation. Must be used as booking_id in the tracking pixel.",
                        "type": "string",
                        "example": "XXX123"
                    },
                    "partner_reference": {
                        "description": "The advertiser's unique identifier for this hotel. In a \"/booking_submit\" request this should be the same as\nin the request.",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "booking-cancel-response": {
                "title": "Booking Cancel",
                "description": "Schema of a booking cancellation.",
                "required": [
                    "partner_reference",
                    "reservation_id",
                    "status",
                    "cancellation_number",
                    "customer_support"
                ],
                "properties": {
                    "customer_support": {
                        "$ref": "#/components/schemas/customer-support"
                    },
                    "reservation_id": {
                        "description": "The advertiser's unique id for this reservation. Must be used as booking_id in the tracking pixel.",
                        "type": "string",
                        "example": "XXX123"
                    },
                    "partner_reference": {
                        "description": "The advertiser's unique identifier for this hotel. In a \"/booking_submit\" request this should be the same as\nin the request.",
                        "type": "string",
                        "example": "1"
                    },
                    "status": {
                        "enum": [
                            "Success",
                            "AlreadyCancelled",
                            "UnknownReference",
                            "CannotBeCancelled",
                            "Error"
                        ],
                        "example": "Success"
                    },
                    "cancellation_number": {
                        "description": "Unique identifier for the cancellation. Required if status is \"Success\" or \"AlreadyCancelled.\"",
                        "type": "string",
                        "example": "12345678"
                    }
                },
                "type": "object"
            },
            "booking-payment-authorise-request": {
                "title": "Booking Payment Confirm Request",
                "description": "Schema of an booking payment confirm request.",
                "required": [
                    "api_version",
                    "reservation_id",
                    "callback_parameters",
                    "partner_data"
                ],
                "properties": {
                    "api_version": {
                        "description": "Version of the API used.",
                        "type": "integer",
                        "example": 1
                    },
                    "reservation_id": {
                        "description": "The advertiser's unique id for the reservation.",
                        "type": "string",
                        "example": "1234"
                    },
                    "callback_parameters": {
                        "description": "Params added by the PSP to the callback URL.",
                        "type": "string",
                        "example": "a=1&b=2"
                    },
                    "partner_data": {
                        "$ref": "#/components/schemas/partner-data"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "booking-payment-authorise-response": {
                "title": "Booking Payment Confirm",
                "description": "Schema of an booking payment confirm.",
                "required": [
                    "reference_id",
                    "status",
                    "customer_support"
                ],
                "properties": {
                    "customer_support": {
                        "$ref": "#/components/schemas/customer-support"
                    },
                    "status": {
                        "enum": [
                            "Success",
                            "Failure",
                            "UnknownReference"
                        ],
                        "example": "Success"
                    },
                    "problems": {
                        "description": "An array containing issues that occurred\nRequired, if status = \"Failure.\"\nOptional, if status = \"Success\"",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/problem"
                        }
                    },
                    "reference_id": {
                        "description": "Echo the reference_id provided by trivago in the corresponding request. If the request fails\n(timeout or otherwise), this id can be used in a booking verification request to determine if the call\nwas successful.",
                        "type": "string",
                        "example": "692e8acc-d1d9-45dc-b50f-e7b824f3306f"
                    },
                    "reservation": {
                        "$ref": "#/components/schemas/reservation"
                    }
                },
                "type": "object"
            },
            "booking-prepare-request": {
                "title": "Booking Prepare",
                "description": "Schema of a booking preparation request.",
                "required": [
                    "checkin_date",
                    "checkout_date",
                    "partner_reference",
                    "reference_id",
                    "partner_data",
                    "party"
                ],
                "properties": {
                    "api_version": {
                        "description": "Version of the API used.",
                        "type": "integer",
                        "example": 1
                    },
                    "reference_id": {
                        "description": "trivago identifier for the booking session. Please consider that this id might not be unique and should not be treated as a \"confirmation\" id.",
                        "type": "string",
                        "example": "692e8acc-d1d9-45dc-b50f-e7b824f3306f"
                    },
                    "partner_data": {
                        "$ref": "#/components/schemas/partner-data"
                    },
                    "party": {
                        "description": "An array of Party",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/party"
                        },
                        "minItems": 1
                    },
                    "checkin_date": {
                        "description": "The user's check-in date in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-01"
                    },
                    "checkout_date": {
                        "description": "The user's check-out date in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-02"
                    },
                    "partner_reference": {
                        "description": "Advertiser's unique hotel id.",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "booking-prepare-response-available": {
                "title": "Booking Prepare Available",
                "description": "Schema of a booking preparation.",
                "required": [
                    "status",
                    "checkin_date",
                    "checkout_date",
                    "partner_reference",
                    "room_type",
                    "customer_support"
                ],
                "properties": {
                    "customer_support": {
                        "$ref": "#/components/schemas/customer-support"
                    },
                    "status": {
                        "enum": [
                            "ADJUSTED",
                            "AVAILABLE",
                            "SOLD_OUT"
                        ],
                        "example": "AVAILABLE"
                    },
                    "room_type": {
                        "$ref": "#/components/schemas/room-type"
                    },
                    "checkin_date": {
                        "description": "The user's check-in date in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-01"
                    },
                    "checkout_date": {
                        "description": "The user's check-out date in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-02"
                    },
                    "partner_reference": {
                        "description": "Advertiser's unique hotel id.",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "booking-prepare-response": {
                "title": "Booking Prepare",
                "description": "Schema of a booking preparation.",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/booking-prepare-response-available"
                    },
                    {
                        "$ref": "#/components/schemas/booking-prepare-response-sold-out"
                    }
                ]
            },
            "booking-prepare-response-sold-out": {
                "title": "Booking Prepare Sold-Out",
                "description": "Schema of a booking preparation.",
                "required": [
                    "checkin_date",
                    "checkout_date",
                    "partner_reference",
                    "status",
                    "customer_support"
                ],
                "properties": {
                    "status": {
                        "description": "Specifies the status of the Prepare response:\n- SOLD_OUT",
                        "type": "string",
                        "enum": [
                            "SOLD_OUT"
                        ],
                        "example": "SOLD_OUT"
                    },
                    "customer_support": {
                        "$ref": "#/components/schemas/customer-support"
                    },
                    "checkin_date": {
                        "description": "The user's check-in date in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-01"
                    },
                    "checkout_date": {
                        "description": "The user's check-out date in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-02"
                    },
                    "partner_reference": {
                        "description": "Advertiser's unique hotel id.",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "booking-submit-request": {
                "title": "Booking Submit Request",
                "description": "Schema of an booking submit request.",
                "required": [
                    "checkin_date",
                    "checkout_date",
                    "partner_reference",
                    "customer",
                    "rooms",
                    "final_price_at_booking",
                    "final_price_at_checkout",
                    "partner_data"
                ],
                "properties": {
                    "api_version": {
                        "description": "Version of the API used.",
                        "type": "integer",
                        "example": 1
                    },
                    "checkin_date": {
                        "description": "The user's check-in date in YYYY-MM-DD.\nThe check-in date of the traveler.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-01"
                    },
                    "checkout_date": {
                        "description": "The user's check-out date in YYYY-MM-DD.\nThe check-out date of the traveler.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-02"
                    },
                    "partner_reference": {
                        "description": "Advertiser's unique hotel id.\nPartner hotel id.",
                        "type": "string",
                        "example": "1"
                    },
                    "ip_address": {
                        "description": "Sending IP address.",
                        "type": "string"
                    },
                    "reference_id": {
                        "description": "trivago identifier for the booking session. Please consider that this id might not be unique and should not be\ntreated as a \"confirmation\" id. Identifier for the booking session",
                        "type": "string",
                        "example": "692e8acc-d1d9-45dc-b50f-e7b824f3306f"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/customer"
                    },
                    "rooms": {
                        "description": "An array of rooms to be booked.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/room-stay"
                        },
                        "minItems": 1
                    },
                    "payment_method": {
                        "description": "An object containing the credit card details for payment of the reservation.",
                        "$ref": "#/components/schemas/booking-submit-request-payment-method"
                    },
                    "payment": {
                        "description": "Defines the selected payment method of the user.",
                        "$ref": "#/components/schemas/payment"
                    },
                    "final_price_at_booking": {
                        "description": "An object containing the entire price to be paid at time of booking, including taxes and fees.\\nThis will be used to validate the line items.",
                        "example": {
                            "amount": 100,
                            "currency": "USD"
                        },
                        "$ref": "#/components/schemas/price"
                    },
                    "final_price_at_checkout": {
                        "description": "An object containing the entire price to be paid at time of stay, including taxes and fees.\\nThis will be used to validate the line items. If the full price is paid at the time of booking,\\nthis element must still be included, with an amount of 0 or 0.00.",
                        "example": {
                            "amount": 5,
                            "currency": "USD"
                        },
                        "$ref": "#/components/schemas/price"
                    },
                    "partner_data": {
                        "$ref": "#/components/schemas/partner-data"
                    },
                    "tracking_data": {
                        "description": "Enables advertisers to receive specific information for tracking purpose. Fields supported here can be static fields as given by advertiser or can be dynamic fields as supported for tracking pixel which can be fired from express landing page. Refer here for tracking parameters supported from trivago side at submit e.g:\n\"tracking_data\": {\n\"actor\": \"trivago\",\n\"tracking_id\": \"3125354\"\n}",
                        "example": {
                            "actor": "trivago",
                            "advLink": "http://advertiser-site.com/hoteladlon/Executive_Brilliant_Doppelzimmer?start_date=2016-12-28&end_date=2016-12-29"
                        }
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "booking-submit-response": {
                "title": "Booking Submit Response",
                "description": "Schema of booking submit response.",
                "required": [
                    "reference_id",
                    "status",
                    "customer_support"
                ],
                "properties": {
                    "customer_support": {
                        "$ref": "#/components/schemas/customer-support"
                    },
                    "status": {
                        "enum": [
                            "Success",
                            "Failure",
                            "PaymentPending",
                            "UnknownReference"
                        ],
                        "example": "Success"
                    },
                    "authorisation": {
                        "$ref": "#/components/schemas/authorisation"
                    },
                    "problems": {
                        "description": "An array containing issues that occurred\nRequired, if status = \"Failure.\"\nOptional, if status = \"Success\"",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/problem"
                        }
                    },
                    "reference_id": {
                        "description": "Echo the reference_id provided by trivago in the corresponding request. If the request fails\n(timeout or otherwise), this id can be used in a booking verification request to determine if the call\nwas successful.",
                        "type": "string",
                        "example": "692e8acc-d1d9-45dc-b50f-e7b824f3306f"
                    },
                    "reservation": {
                        "$ref": "#/components/schemas/reservation"
                    }
                },
                "type": "object"
            },
            "booking-verify-request": {
                "description": "Schema of booking verify request object",
                "required": [
                    "partner_reference",
                    "reservation_id",
                    "reference_id"
                ],
                "properties": {
                    "reservation_id": {
                        "description": "The advertiser's unique id for this reservation. Must be used as booking_id in the tracking pixel.",
                        "type": "string",
                        "example": "XXX123"
                    },
                    "partner_reference": {
                        "description": "The advertiser's unique identifier for this hotel. In a \"/booking_submit\" request this should be the same as\nin the request.",
                        "type": "string",
                        "example": "1"
                    },
                    "reference_id": {
                        "description": "trivago identifier for the booking session. Please consider that this id might not be unique and should not be\ntreated as a \"confirmation\" id.",
                        "type": "string",
                        "example": "692e8acc-d1d9-45dc-b50f-e7b824f3306f"
                    }
                },
                "type": "object"
            },
            "booking-verify-response": {
                "title": "Booking Verify",
                "description": "Schema of an booking verify.",
                "required": [
                    "reference_id",
                    "status",
                    "customer_support"
                ],
                "properties": {
                    "customer_support": {
                        "$ref": "#/components/schemas/customer-support"
                    },
                    "status": {
                        "enum": [
                            "Success",
                            "Failure",
                            "PaymentPending",
                            "UnknownReference"
                        ],
                        "example": "Success"
                    },
                    "problems": {
                        "description": "An array containing issues that occurred\nRequired, if status = \"Failure.\"\nOptional, if status = \"Success\"",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/problem"
                        }
                    },
                    "reference_id": {
                        "description": "Echo the reference_id provided by trivago in the corresponding request. If the request fails\n(timeout or otherwise), this id can be used in a booking verification request to determine if the call\nwas successful.",
                        "type": "string",
                        "example": "692e8acc-d1d9-45dc-b50f-e7b824f3306f"
                    },
                    "reservation": {
                        "$ref": "#/components/schemas/reservation"
                    }
                },
                "type": "object"
            },
            "address": {
                "title": "Billing Address object",
                "description": "Schema of an billing address.",
                "required": [
                    "address1",
                    "city",
                    "country"
                ],
                "properties": {
                    "address1": {
                        "description": "Street and number of address",
                        "type": "string",
                        "example": "12 Johnson Junction"
                    },
                    "address2": {
                        "description": "Additional address information",
                        "type": "string"
                    },
                    "city": {
                        "description": "City of addres",
                        "type": "string",
                        "example": "Santa Cruz"
                    },
                    "state": {
                        "description": "State or province\nState is required for all addresses from the United States (US), Australia (AU), Canada (CA), Malaysia (MY),\nPhilippines (PH) and Italy (IT). For addresses from the United Kingdom (UK), New Zealand (NZ), Ireland (IE),\nSingapore (SG), South Africa (ZA), France (FR) and others the state is optional. required for addresses\nfrom United States.",
                        "type": "string",
                        "example": "Maryland"
                    },
                    "postal_code": {
                        "description": "Zip code or postal code\nrequired for addresses from United States",
                        "type": "string",
                        "example": "97897"
                    },
                    "country": {
                        "description": "ISO 3166 country code",
                        "type": "string",
                        "example": "US"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "authorisation": {
                "title": "Authorisation object",
                "description": "Schema of an authorisation.",
                "required": [
                    "reservation_id",
                    "partner_data",
                    "target"
                ],
                "properties": {
                    "reservation_id": {
                        "description": "The advertiser's unique id for the corresponding reservation. Must be used as booking_id in the tracking pixel.",
                        "type": "string"
                    },
                    "partner_data": {
                        "$ref": "#/components/schemas/partner-data"
                    },
                    "target": {
                        "$ref": "#/components/schemas/authorisation-target"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "authorisation-target": {
                "title": "Authorisation Target object",
                "description": "Schema of an authorisation target.",
                "required": [
                    "url",
                    "method",
                    "parameters"
                ],
                "properties": {
                    "url": {
                        "description": "The Authorisation target url.",
                        "type": "string"
                    },
                    "method": {
                        "description": "HTTP method (POST or GET).",
                        "type": "string",
                        "enum": [
                            "GET",
                            "POST"
                        ]
                    },
                    "parameters": {
                        "description": "Query/Post parameters as JSON object.",
                        "type": "object"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "cancellation": {
                "title": "Cancellation object",
                "description": "Schema of an cancellation.",
                "required": [
                    "penalties"
                ],
                "properties": {
                    "policy": {
                        "description": "Advertiser's text to describe the cancellation policy.",
                        "type": "string"
                    },
                    "penalties": {
                        "description": "Array to describe the costs user has to pay if the rate is being cancelled.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cancellation-penalty"
                        }
                    },
                    "type": {
                        "description": "Specifies the penalty users have to pay at time of booking. Must be of one of the following strings :\n- unknown\n- full_refundable\n- partial_refundable\n- non_refundable",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "cancellation-penalty": {
                "title": "Cancellation Penalty object",
                "description": "Schema of an cancellation penalty.",
                "required": [
                    "fee"
                ],
                "properties": {
                    "from": {
                        "description": "Date determined from which time stamp this penalty is applied. Must be in ISO-8601 format, e.g.\n2015-05-25T16:00:00+0000. If the penalty is applied at the time of booking, this field must not be provided.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fee": {
                        "$ref": "#/components/schemas/price"
                    }
                },
                "type": "object"
            },
            "contact": {
                "title": "Contact object",
                "description": "Schema of an contact.",
                "required": [
                    "contact",
                    "description"
                ],
                "properties": {
                    "contact": {
                        "description": "Contact details (e.g. phone number or e-mail address).",
                        "type": "string",
                        "example": "444444444"
                    },
                    "description": {
                        "description": "Description of this contact.",
                        "type": "string",
                        "example": "Phone"
                    }
                },
                "type": "object"
            },
            "customer": {
                "title": "Customer object",
                "description": "Schema of an customer.",
                "required": [
                    "first_name",
                    "last_name",
                    "phone_number",
                    "email",
                    "country"
                ],
                "properties": {
                    "first_name": {
                        "description": "First name of the user submitting the booking.",
                        "type": "string",
                        "example": "Christopher"
                    },
                    "last_name": {
                        "description": "Last name of the user submitting the booking.",
                        "type": "string",
                        "example": "Palmer"
                    },
                    "phone_number": {
                        "description": "Phone number of the user submitting the booking.",
                        "type": "string",
                        "example": "9-(590)311-9256"
                    },
                    "email": {
                        "description": "E-mail address of the user submitting the booking.",
                        "type": "string",
                        "example": "Christopher.Palmer@test.trivago.com"
                    },
                    "country": {
                        "description": "ISO 3166 country code of the user submitting the booking.",
                        "type": "string",
                        "example": "US"
                    }
                },
                "type": "object"
            },
            "customer-support": {
                "title": "Customer Support object",
                "description": "Schema of an customer support.",
                "required": [
                    "phone_numbers",
                    "emails"
                ],
                "properties": {
                    "phone_numbers": {
                        "description": "Array of customer support phone numbers. The first Contact of the phone_numbers array will be display to the user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact"
                        }
                    },
                    "emails": {
                        "description": "Array of customer support e-mail addresses.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact"
                        }
                    },
                    "urls": {
                        "description": "Array of url redirecting to customer support information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact"
                        },
                        "deprecated": true
                    }
                },
                "type": "object"
            },
            "discount": {
                "title": "Discount object",
                "description": "Schema of a discount object.",
                "properties": {
                    "percentage": {
                        "description": "Percentage value of the discount. Mandatory, only if total is not provided.",
                        "type": "number",
                        "format": "float"
                    },
                    "total": {
                        "$ref": "#/components/schemas/price"
                    }
                },
                "type": "object",
                "anyOf": [
                    {
                        "required": [
                            "percentage"
                        ]
                    },
                    {
                        "required": [
                            "total"
                        ]
                    }
                ]
            },
            "error": {
                "title": "Error object",
                "description": "Schema of an error.",
                "required": [
                    "error_code"
                ],
                "properties": {
                    "error_code": {
                        "description": "One of the error codes described below :\n1. Unknown Error\n2. Request cannot be parsed\n3. Invalid Hotel ID (Should be returned if partner_reference is unknown).\n4. Timeout requested (stops requests for the specified time).\n5. Recoverable Error (equivalent to http 503).",
                        "type": "integer"
                    },
                    "message": {
                        "description": "String describing the error (maximum length of 1000 characters).",
                        "type": "string"
                    },
                    "timeout": {
                        "description": "Number of seconds trivago should stop sending requests (for use with Error Code 4).",
                        "type": "integer"
                    },
                    "hotel_ids": {
                        "description": "Array of hotels ids for which this error occurs.",
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "hotel": {
                "title": "Hotel object",
                "description": "Schema of an hotel.",
                "required": [
                    "item_id",
                    "partner_reference"
                ],
                "properties": {
                    "item_id": {
                        "description": "trivago item id",
                        "type": "integer",
                        "example": 1
                    },
                    "partner_reference": {
                        "description": "Advertiser's unique partner reference",
                        "type": "string",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "hotel-details": {
                "title": "Hotel details object",
                "description": "Schema of a hotel details object",
                "required": [
                    "name",
                    "address1",
                    "city",
                    "country"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the hotel",
                        "type": "string"
                    },
                    "address1": {
                        "description": "Street and number of the hotel",
                        "type": "string"
                    },
                    "address2": {
                        "description": "Additional address information about the hotel",
                        "type": "string"
                    },
                    "city": {
                        "description": "City of the hotel",
                        "type": "string"
                    },
                    "state": {
                        "description": "State or province",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "Zip code or postal code",
                        "type": "string"
                    },
                    "country": {
                        "description": "ISO 3166 country code",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "Latitude coordinate",
                        "type": "number",
                        "format": "float"
                    },
                    "longitude": {
                        "description": "Longitude coordinate",
                        "type": "number",
                        "format": "float"
                    },
                    "url": {
                        "description": "URL for general hotel contact",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone number of the hotel",
                        "type": "string"
                    },
                    "amenities": {
                        "description": "Amenities that are generally available at the hotel, not specific to a room. Each string is free text which\nshould be in the language indicated by the 'lang' parameter",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "photos": {
                        "description": "URLs for photos of the hotel to be displayed during the booking process. If no photos are available, an empty\narray should be returned.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/photo"
                        }
                    },
                    "checkinout_policy": {
                        "description": "Describes the check-in/check-out policy for the hotel. Should be in the language indicated by the 'lang'\nparameter. Max length 1000 characters.",
                        "type": "string"
                    }
                },
                "type": "object",
                "deprecated": true
            },
            "line-item": {
                "title": "LineItem object",
                "description": "Schema of a line item\\n\n|rate model|net_rate|vat|service_fee|booking_fee|hotel_fee|city_tax|resort_fee|others|\n|--- |--- |--- |--- |--- |--- |--- |--- |--- |\n|AI|x|x|x|x|x|x|x|x|\n|GROSS|x|x|x|x|||||\n|NET|x||||||||\n",
                "required": [
                    "price",
                    "type",
                    "paid_at_checkout",
                    "description"
                ],
                "properties": {
                    "price": {
                        "$ref": "#/components/schemas/price"
                    },
                    "type": {
                        "description": "Please note that fields rate, tax and fee are deprecated and should not be used",
                        "type": "string",
                        "enum": [
                            "net_rate",
                            "city_tax",
                            "vat",
                            "hotel_fee",
                            "resort_fee",
                            "service_fee",
                            "booking_fee",
                            "others",
                            "rate",
                            "tax",
                            "fee"
                        ]
                    },
                    "paid_at_checkout": {
                        "description": "true if the rate can be post-paid; false if rate has to be pre-paid.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "A textual description of the charge. This may be displayed to users and should be in the language indicated by the\n'lang' parameter provided in the response.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "partner-data": {
                "title": "Partner Data object",
                "description": "Schema of partner data",
                "oneOf": [
                    {
                        "type": "number",
                        "example": 123
                    },
                    {
                        "type": "string",
                        "example": "rate-key"
                    },
                    {
                        "type": "object",
                        "example": {
                            "rate_key": "53f3"
                        }
                    },
                    {
                        "type": "integer",
                        "example": 123
                    }
                ]
            },
            "party": {
                "title": "Party Object",
                "description": "Schema of party object.",
                "required": [
                    "adults"
                ],
                "properties": {
                    "adults": {
                        "description": "The number of adults staying in the room.",
                        "type": "integer",
                        "example": 2
                    },
                    "children": {
                        "description": "The ages of any children staying in the room.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1
                        ]
                    }
                },
                "type": "object"
            },
            "payment": {
                "title": "Payment Object",
                "description": "Schema of payment",
                "required": [
                    "method",
                    "parameters",
                    "billing_address"
                ],
                "properties": {
                    "method": {
                        "$ref": "#/components/schemas/payment-method"
                    },
                    "parameters": {
                        "description": "Contains the parameters corresponding to the selected payment method.",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/payment-card-parameters"
                            },
                            {
                                "$ref": "#/components/schemas/external-provider-parameters"
                            },
                            {
                                "$ref": "#/components/schemas/tokenization-parameters"
                            },
                            {
                                "$ref": "#/components/schemas/bank-account-parameters"
                            },
                            {
                                "$ref": "#/components/schemas/manual-payment-parameters"
                            }
                        ]
                    },
                    "billing_address": {
                        "description": "Billing address of the user submitting the booking.",
                        "$ref": "#/components/schemas/address"
                    }
                },
                "type": "object"
            },
            "payment-authentication-no-auth-required": {
                "title": "No Authenticatoin Required response object",
                "description": "Schema for No Authentication Required authorisation",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "NoAuthRequired"
                        ],
                        "example": "NoAuthRequired"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "payment-authentication-3ds1": {
                "title": "3DS1 authentication object",
                "description": "Schema of 3DS1 specific authorisation",
                "required": [
                    "cavv",
                    "xid",
                    "threed_authenticated_response",
                    "cavv_algorithm",
                    "threed_offered_response",
                    "eci",
                    "acquirer_code"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "3DS1"
                        ],
                        "example": "3DS1"
                    },
                    "cavv": {
                        "description": "The Cardholder Authentication Verification Value for the 3DS authentication session",
                        "type": "string"
                    },
                    "xid": {
                        "description": "The 3DS transaction ID of the 3DS session",
                        "type": "string"
                    },
                    "threed_authenticated_response": {
                        "description": "The raw 3DS authentication result from the card issuer.",
                        "type": "string"
                    },
                    "cavv_algorithm": {
                        "description": "The algorithm used to generate the 3DS Cardholder Authentication Verification Value.",
                        "type": "string"
                    },
                    "threed_offered_response": {
                        "description": "The raw enrollment result from the 3DS directory services of the card schemes.",
                        "type": "string"
                    },
                    "eci": {
                        "description": "The Electronic Commerce Indicator returned from the schemes for the 3DS payment session.",
                        "type": "string"
                    },
                    "authorisation_mid": {
                        "description": "This is the MID of the acquirer account that you want to authorise the transaction with.",
                        "type": "string"
                    },
                    "acquirer_code": {
                        "description": "The name of the acquirer processing the payment request.",
                        "type": "string"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "payment-authentication-3ds2": {
                "title": "3DS2 authentication object",
                "description": "Schema of 3DS2 specific authorisation",
                "required": [
                    "authentication_value",
                    "ds_trans_id",
                    "eci",
                    "three_ds_server_trans_id",
                    "trans_status",
                    "message_version"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "3DS2"
                        ],
                        "example": "3DS2"
                    },
                    "authentication_value": {
                        "description": "The `authenticationValue` value as defined in the 3D Secure 2 specification.",
                        "type": "string"
                    },
                    "ds_trans_id": {
                        "description": "The `dsTransID` value as defined in the 3D Secure 2 specification.",
                        "type": "string"
                    },
                    "eci": {
                        "description": "The `eci` value as defined in the 3D Secure 2 specification.",
                        "type": "string"
                    },
                    "three_ds_server_trans_id": {
                        "description": "The `threeDSServerTransID` value as defined in the 3D Secure 2 specification.",
                        "type": "string"
                    },
                    "trans_status": {
                        "description": "The `transStatus` value as defined in the 3D Secure 2 specification.",
                        "type": "string"
                    },
                    "message_version": {
                        "description": "The `messageVersion` value as defined in the 3D Secure 2 specification.",
                        "type": "string"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "bank-account-parameters": {
                "description": "Bank account parameters",
                "required": [
                    "holder_name",
                    "iban",
                    "type"
                ],
                "properties": {
                    "type": {
                        "enum": [
                            "BankAccount"
                        ],
                        "example": "BankAccount"
                    },
                    "holder_name": {
                        "description": "Name of account holder.",
                        "type": "string",
                        "example": "Christopher Palmer"
                    },
                    "iban": {
                        "description": "IBAN of bank account.",
                        "type": "string",
                        "example": "DE27100777770209299700"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "external-provider-parameters": {
                "description": "External provider parameters",
                "required": [
                    "callback_success",
                    "callback_cancel",
                    "callback_error",
                    "type"
                ],
                "properties": {
                    "callback_success": {
                        "description": "Callback for successful 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/success"
                    },
                    "callback_cancel": {
                        "description": "Callback for canceled 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/cancel"
                    },
                    "callback_error": {
                        "description": "Callback for failed 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/error"
                    },
                    "type": {
                        "enum": [
                            "ExternalProvider"
                        ],
                        "example": "ExternalProvider"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "manual-payment-parameters": {
                "description": "Manual payment parameters",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "enum": [
                            "ManualPayment"
                        ],
                        "example": "ManualPayment"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "payment-card-parameters": {
                "description": "Payment card parameters",
                "required": [
                    "card_number",
                    "cardholder_name",
                    "expiration_month",
                    "expiration_year",
                    "cvv",
                    "type"
                ],
                "properties": {
                    "authentication": {
                        "description": "The type of 3DS authentication to use.",
                        "type": "object",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/payment-authentication-3ds1"
                            },
                            {
                                "$ref": "#/components/schemas/payment-authentication-3ds2"
                            },
                            {
                                "$ref": "#/components/schemas/payment-authentication-no-auth-required"
                            }
                        ]
                    },
                    "callback_success": {
                        "description": "Callback for successful 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/success"
                    },
                    "callback_cancel": {
                        "description": "Callback for canceled 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/cancel"
                    },
                    "callback_error": {
                        "description": "Callback for failed 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/error"
                    },
                    "type": {
                        "description": "Payment type",
                        "type": "string",
                        "enum": [
                            "PaymentCard"
                        ],
                        "example": "PaymentCard"
                    },
                    "card_number": {
                        "description": "Credit card number used for the booking.",
                        "type": "string",
                        "example": "41111111111111"
                    },
                    "cardholder_name": {
                        "description": "Name on the credit card holder.",
                        "type": "string",
                        "example": "Christopher Palmer"
                    },
                    "expiration_month": {
                        "description": "Expiration month as a two-digit string (e.g. 01, 02, .. 12)",
                        "type": "string",
                        "example": "12"
                    },
                    "expiration_year": {
                        "description": "Expiration year as four digit string.",
                        "type": "string",
                        "example": "2019"
                    },
                    "cvv": {
                        "description": "The cvv number of the credit card used for the booking.",
                        "type": "string",
                        "example": "123"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "tokenization-parameters": {
                "description": "Tokenization parameters",
                "required": [
                    "token",
                    "order_id",
                    "type"
                ],
                "properties": {
                    "authentication": {
                        "description": "The type of 3DS authentication to use.",
                        "type": "object",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/payment-authentication-3ds1"
                            },
                            {
                                "$ref": "#/components/schemas/payment-authentication-3ds2"
                            },
                            {
                                "$ref": "#/components/schemas/payment-authentication-no-auth-required"
                            }
                        ]
                    },
                    "callback_success": {
                        "description": "Callback for successful 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/success"
                    },
                    "callback_cancel": {
                        "description": "Callback for canceled 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/cancel"
                    },
                    "callback_error": {
                        "description": "Callback for failed 3ds-authorisation (if necessary).",
                        "type": "string",
                        "example": "https://advertiser.com/callback/error"
                    },
                    "type": {
                        "enum": [
                            "Tokenization"
                        ],
                        "example": "Tokenization"
                    },
                    "token": {
                        "description": "Token trivago has received from the advertiser's payment service provider.",
                        "type": "string",
                        "example": "tolken_123"
                    },
                    "order_id": {
                        "description": "Order id trivago has created when requesting the token from the advertiser's payment service provider.",
                        "type": "string",
                        "example": "1234"
                    },
                    "cvv": {
                        "description": "CVV/CVC - mandatory if the advertiser's payment service provider's tokenization does not include CVV/CVC.",
                        "type": "string",
                        "example": "123"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "payment-method": {
                "title": "Payment Method object",
                "description": "Schema of payment method.",
                "required": [
                    "code",
                    "options"
                ],
                "properties": {
                    "code": {
                        "description": "Defines the payment method. Must be on of these values (case sensitive):\n- PaymentCard\n- ExternalProvider\n- BankAccount\n- ManualPayment",
                        "type": "string",
                        "enum": [
                            "PaymentCard",
                            "ExternalProvider",
                            "BankAccount",
                            "ManualPayment"
                        ]
                    },
                    "options": {
                        "description": "Specifies the accepted payment cards or the external payment provider, as well as the extra fees the users have\nto pay for using specific payment cards/payment providers.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/payment-option"
                        }
                    }
                },
                "type": "object"
            },
            "payment-option": {
                "title": "PaymentOption object",
                "description": "Schema of payment option",
                "oneOf": [
                    {
                        "required": [
                            "code",
                            "fee"
                        ],
                        "properties": {
                            "code": {
                                "description": "For documentation on supported Payment Methods, refer to the SC documentation:[http://git.trivago.trv/projects/SRT/repos/connectivity-suite-documentation/browse/expressbooking/api-ob   jects.html?at=d91542b7c62845dbad7853634a0d5fc3767f06da#1031-1078]",
                                "type": "string",
                                "enum": [
                                    "AmericanExpress",
                                    "Aura",
                                    "BankTransfer",
                                    "Cabal",
                                    "Carnet",
                                    "ChinaUnionPay",
                                    "Cirrus",
                                    "Dankort",
                                    "Diners",
                                    "DirectDebit",
                                    "Discover",
                                    "Duet",
                                    "Eftpos",
                                    "Elo",
                                    "GeCapital",
                                    "Hipercard",
                                    "Invoice",
                                    "JCB",
                                    "Lukoil",
                                    "Maestro",
                                    "MasterCard",
                                    "MasterCardDebit",
                                    "Newday",
                                    "NSPK MIR",
                                    "Ourocard",
                                    "Paypal",
                                    "RuPay",
                                    "Sbercard",
                                    "Sodexo",
                                    "Troy",
                                    "Uatp",
                                    "UnionPay",
                                    "Visa",
                                    "VisaDebit"
                                ]
                            },
                            "fee": {
                                "description": "The value of the price. If there is no fee please send the Price-object with an amount of 0.0",
                                "$ref": "#/components/schemas/price"
                            },
                            "description": {
                                "description": "Description or statement for the payment option to be shown to the customer, e.g. For late arrivals after 16:00\\n(local time) the reservation must be guaranteed.",
                                "type": "string"
                            },
                            "hold_time": {
                                "description": "Date and time for the hold time of the reservation. Must be in ISO-8601 format, e.g. 2018-05-25T16:00:00+0000.",
                                "type": "string",
                                "format": "date-time"
                            },
                            "brand": {
                                "description": "Specifies the brand of this option. Must be one of the following values:\\n- Bonus\\n- Axess\\n- CardFinans\\n- Maximum\\n- Paraf\\n- World\\n- Advantage",
                                "type": "string",
                                "enum": [
                                    "Bonus",
                                    "Axess",
                                    "CardFinans",
                                    "Maximum",
                                    "Paraf",
                                    "World",
                                    "Advantage"
                                ]
                            },
                            "discount": {
                                "description": "Absolute discount for this option",
                                "$ref": "#/components/schemas/price"
                            },
                            "installments": {
                                "description": "List of installment plans",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/installment"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "required": [
                            "code",
                            "fee",
                            "hold_time"
                        ],
                        "properties": {
                            "code": {
                                "description": "For documentation on supported Payment Methods, refer to the SC documentation:[http://git.trivago.trv/projects/SRT/repos/connectivity-suite-documentation/browse/expressbooking/api-ob   jects.html?at=d91542b7c62845dbad7853634a0d5fc3767f06da#1031-1078]",
                                "type": "string",
                                "enum": [
                                    "NoGuarantee"
                                ]
                            },
                            "fee": {
                                "description": "The value of the price. If there is no fee please send the Price-object with an amount of 0.0",
                                "$ref": "#/components/schemas/price"
                            },
                            "description": {
                                "description": "Description or statement for the payment option to be shown to the customer, e.g. For late arrivals after 16:00\\n(local time) the reservation must be guaranteed.",
                                "type": "string"
                            },
                            "hold_time": {
                                "description": "Date and time for the hold time of the reservation. Must be in ISO-8601 format, e.g. 2018-05-25T16:00:00+0000.",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "installment": {
                "description": "Installment",
                "required": [
                    "id",
                    "number",
                    "frequency",
                    "installment_amount",
                    "interest_charge"
                ],
                "properties": {
                    "id": {
                        "description": "Identifier for that installment plan",
                        "type": "string",
                        "example": "1-M-EUR"
                    },
                    "number": {
                        "description": "Number of installments (must be >1)",
                        "type": "integer",
                        "example": 8
                    },
                    "frequency": {
                        "description": "Frequency of the installment payments. Must be one of the following values:\n- B: Biweekly\n- M: Monthly (default)\n- W: Weekly",
                        "type": "string",
                        "enum": [
                            "B",
                            "M",
                            "W"
                        ],
                        "example": "M"
                    },
                    "installment_amount": {
                        "$ref": "#/components/schemas/price"
                    },
                    "interest_charge": {
                        "description": "Interest rate per installment",
                        "type": "number",
                        "format": "float"
                    },
                    "extra_charge": {
                        "$ref": "#/components/schemas/price"
                    },
                    "swift_code": {
                        "description": "SWIFT-BIC - Bank Identifier Code",
                        "type": "string"
                    },
                    "discount": {
                        "$ref": "#/components/schemas/price"
                    },
                    "initial_rate": {
                        "$ref": "#/components/schemas/price"
                    },
                    "last_rate": {
                        "$ref": "#/components/schemas/price"
                    },
                    "first_installment": {
                        "description": "First installment starts after x iterations according to the frequency value",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "booking-submit-request-payment-method": {
                "description": "Deprecated payment method",
                "required": [
                    "card_type",
                    "card_number",
                    "cardholder_name",
                    "expiration_month",
                    "expiration_year",
                    "cvv",
                    "billing_address"
                ],
                "properties": {
                    "billing_address": {
                        "$ref": "#/components/schemas/address"
                    },
                    "card_type": {
                        "description": "The type of credit card used.",
                        "type": "string",
                        "example": "Visa"
                    },
                    "card_number": {
                        "description": "Credit card number used for the booking.",
                        "type": "string",
                        "example": "4111111111111111"
                    },
                    "cardholder_name": {
                        "description": "Name on the credit card holder.",
                        "type": "string",
                        "example": "Christopher Palmer"
                    },
                    "expiration_month": {
                        "description": "Expiration month as a two-digit string (e.g. 01, 02, .. 12).",
                        "type": "string",
                        "example": "09"
                    },
                    "expiration_year": {
                        "description": "Expiration year as four digit string.",
                        "type": "string",
                        "example": "2025"
                    },
                    "cvv": {
                        "description": "The cvv number of the credit card used for the booking.",
                        "type": "string",
                        "example": "507"
                    }
                },
                "type": "object",
                "deprecated": true
            },
            "photo": {
                "title": "Photo Object",
                "description": "Schema for the photo",
                "required": [
                    "url"
                ],
                "properties": {
                    "url": {
                        "description": "URL for the image. Please assure your images are available with https. The minimum width is 280px, while the\nminimum height is 170px.",
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "description": "URL for thumbnail of the image.",
                        "type": "string"
                    },
                    "caption": {
                        "description": "Caption for the photo. Should be in the language indicated by the 'lang' parameter in the request.",
                        "type": "string"
                    },
                    "width": {
                        "description": "Width in pixels of full size image",
                        "type": "integer"
                    },
                    "height": {
                        "description": "Height in pixels of full size image",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "price": {
                "title": "Price Object",
                "description": "Schema for the price",
                "required": [
                    "amount",
                    "currency"
                ],
                "properties": {
                    "amount": {
                        "description": "The value of the price.",
                        "type": "number",
                        "format": "float"
                    },
                    "currency": {
                        "description": "ISO 4217 currency code for the price.",
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "amount": 80,
                    "currency": "USD"
                }
            },
            "problem": {
                "title": "Problem Object",
                "description": "Schema of an problem",
                "required": [
                    "problem",
                    "explanation"
                ],
                "properties": {
                    "problem": {
                        "description": "One of the supported problem types:",
                        "type": "string",
                        "enum": [
                            "AgentAttention",
                            "AuthorizationDeclinedByAcquirer",
                            "AuthorizationDeclinedByIssuer",
                            "CreditCardDeclined",
                            "CreditCardTypeNotSupported",
                            "InvalidAddress",
                            "InvalidCardholderName",
                            "InvalidCity",
                            "InvalidCountry",
                            "InvalidCreditCardExpiry",
                            "InvalidCreditCardNumber",
                            "InvalidCreditCardSecurityCode",
                            "InvalidEmail",
                            "InvalidHomePhone",
                            "InvalidPostalCode",
                            "InvalidReservationFirstName",
                            "InvalidReservationLastName",
                            "InvalidStateProvince",
                            "InvalidTimeRange",
                            "InvalidTravelerFirstName",
                            "InvalidTravelerLastName",
                            "InvalidWorkPhone",
                            "MissingAddress",
                            "MissingCardholderName",
                            "MissingCity",
                            "MissingCountry",
                            "MissingEmail",
                            "MissingHomePhone",
                            "MissingPostalCode",
                            "MissingReservationFirstName",
                            "MissingReservationLastName",
                            "MissingStateProvince",
                            "MissingTravelerFirstName",
                            "MissingTravelerLastName",
                            "MissingWorkPhone",
                            "MultipleBookingAttempts",
                            "PartnerDown",
                            "PartnerTimeout",
                            "PaymentInsufficientFunds",
                            "PaymentRejectedByFraudDetection",
                            "PaymentSessionExpired",
                            "PendingSupplier",
                            "PriceMismatch",
                            "PropertyNotSupported",
                            "RoomNotAvailable",
                            "UnknownPartnerProblem",
                            "UnknownReference",
                            "UnknownUserProblem",
                            "UnsupportedCharSet",
                            "UnsupportedOccupancy"
                        ]
                    },
                    "explanation": {
                        "description": "Advertiser-specific message to be displayed to the user providing details of the problem, and should be in the\nlanguage of the 'lang' parameter of the request.",
                        "type": "string"
                    },
                    "detail": {
                        "description": "Advertiser-specific message providing details of the problem that will not be displayed to the user. Intended\nfor logging purposes.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "promotion": {
                "title": "Promotion object",
                "description": "Schema of a promotion object",
                "required": [
                    "type",
                    "description"
                ],
                "properties": {
                    "type": {
                        "description": "Type of the promotion. A string value must be one of: MOBILE_TYPE",
                        "type": "string",
                        "enum": [
                            "MOBILE_ONLY"
                        ]
                    },
                    "description": {
                        "description": "A textual description of the promotion. This may be displayed to users and should be in the language indicated\nby the 'lang' parameter provided in the response.",
                        "type": "string"
                    },
                    "discount": {
                        "$ref": "#/components/schemas/discount"
                    }
                },
                "type": "object"
            },
            "receipt": {
                "title": "Receipt object",
                "description": "Schema of an receipt.",
                "required": [
                    "line_items",
                    "final_price_at_booking",
                    "final_price_at_checkout"
                ],
                "properties": {
                    "line_items": {
                        "description": "An array of LineItem objects containing a separate LineItem for each of rate, tax, and fee types.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/line-item"
                        }
                    },
                    "final_price_at_booking": {
                        "$ref": "#/components/schemas/price"
                    },
                    "final_price_at_checkout": {
                        "$ref": "#/components/schemas/price"
                    },
                    "profit_margin": {
                        "$ref": "#/components/schemas/price"
                    }
                },
                "type": "object"
            },
            "reservation": {
                "title": "Reservation object",
                "description": "Schema of an reservation.",
                "required": [
                    "reservation_id",
                    "status",
                    "confirmation_url",
                    "checkin_date",
                    "checkout_date",
                    "partner_reference",
                    "hotel",
                    "customer",
                    "rooms",
                    "receipt"
                ],
                "properties": {
                    "reservation_id": {
                        "description": "The advertiser's unique id for this reservation. Must be used as booking_id in the tracking pixel.",
                        "type": "string",
                        "example": "XXX123"
                    },
                    "partner_reference": {
                        "description": "The advertiser's unique identifier for this hotel. In a \"/booking_submit\" request this should be the same as\nin the request.",
                        "type": "string",
                        "example": "1"
                    },
                    "status": {
                        "enum": [
                            "Booked",
                            "Cancelled",
                            "CheckedIn",
                            "CheckedOut"
                        ],
                        "example": "Booked"
                    },
                    "confirmation_url": {
                        "description": "Deep link to the reservation confirmation page. The confirmation URL is displayed to the user after a booking has\nbeen confirmed.\nSince this URL is displayed to the user, it has to redirect to a page owned by the booked property which\ndisplays any relevant confirmation codes, and confirms the dates, rooms and final price for the booking.\nPlease provide an empty string, if the confirmation page should be hosted by trivago.",
                        "type": "string",
                        "example": "https://advertiser.com/confirmation"
                    },
                    "checkin_date": {
                        "description": "The check-in date of the user in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-01"
                    },
                    "checkout_date": {
                        "description": "The check-out date of the user in YYYY-MM-DD.",
                        "type": "string",
                        "format": "date",
                        "example": "2019-01-02"
                    },
                    "hotel": {
                        "$ref": "#/components/schemas/hotel-details"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/customer"
                    },
                    "rooms": {
                        "description": "An array of RoomStay objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/room-stay"
                        }
                    },
                    "legal_text": {
                        "description": "Describes any legal requirements for the hotel. If an advertiser has a single policy across all bookings, return\nthe advertiser's legal text here (e. g. Terms of Service and Privacy Policy).",
                        "type": "string",
                        "deprecated": true
                    },
                    "comments": {
                        "description": "Generic reservation comments field.",
                        "type": "string",
                        "deprecated": true
                    },
                    "receipt": {
                        "description": "Information about the pricing on the reservation.",
                        "$ref": "#/components/schemas/receipt"
                    }
                },
                "type": "object"
            },
            "room-stay": {
                "title": "RoomStay Object",
                "description": "Schema of an room stay.",
                "required": [
                    "party",
                    "traveler_first_name",
                    "traveler_last_name"
                ],
                "properties": {
                    "party": {
                        "$ref": "#/components/schemas/party"
                    },
                    "traveler_first_name": {
                        "description": "First name of the primary user staying in this room.",
                        "type": "string",
                        "example": "Christopher"
                    },
                    "traveler_last_name": {
                        "description": "Last name of the primary user staying in this room.",
                        "type": "string",
                        "example": "Palmer"
                    }
                },
                "type": "object"
            },
            "room-type": {
                "title": "RoomType object",
                "description": "Schema of an room type.",
                "required": [
                    "name",
                    "final_price_at_booking",
                    "final_price_at_checkout",
                    "partner_data",
                    "line_items",
                    "occupancy"
                ],
                "properties": {
                    "name": {
                        "description": "Short description of the room type. This will be displayed to users, and should be in the language indicated by\nthe 'lang' parameter (max length of 120 characters).",
                        "type": "string"
                    },
                    "rate_key": {
                        "description": "Unique identifier for this rate. Used to identify a rate across several \"/booking_availability\" requests. E.g.\nif an user stays on the landing page for a longer period of time before clicking on a specific rate another\n\"/booking_availability\" request is submitted to ensure that the rate clicked is still bookable.\nIf no rate_key is provided a rate is identified based on rate attributes and rate components.",
                        "type": "string"
                    },
                    "room_type": {
                        "description": "Must be one of:\n- STANDARD\n- COMFORT\n- FAMILY\n- DELUXE\n- SUPERIOR\n- EXECUTIVE\n- JUNIOR_SUITE\n- SUITE\n- EXECUTIVE_SUITE\n- STUDIO\n- APARTMENT\n- BUNGALOW\n- VILLA\n- SHARED\n- OTHERS\nIf room_type field is not provided, room_group.name is used. If room_group.name is missing as well, the field \"name\" of the RoomType object is used.",
                        "type": "string"
                    },
                    "room_group": {
                        "description": "An identifier, which groups different rates to a specified room. All elements with the same room_group.code relates to the same real room (physical).",
                        "$ref": "#/components/schemas/room-group"
                    },
                    "occupancy": {
                        "description": "The occupancy for this room",
                        "$ref": "#/components/schemas/occupancy"
                    },
                    "final_price_at_booking": {
                        "description": "Contains the entire price to be paid at time of booking, including taxes and fees. This will be used to validate the line items.",
                        "$ref": "#/components/schemas/price"
                    },
                    "final_price_at_checkout": {
                        "description": "Contains the entire price to be paid at time of stay, including taxes and fees. This will be used to validate the line items. If the full price is paid at the time of booking, this element must still be included, with an amount of 0 or 0.00.",
                        "$ref": "#/components/schemas/price"
                    },
                    "description": {
                        "description": "Longer room description. Will be displayed to users, and should be in the language indicated by the 'lang' parameter (max length of 1000 characters).",
                        "type": "string"
                    },
                    "rooms_available": {
                        "description": "The number of rooms remaining/available.",
                        "type": "integer"
                    },
                    "partner_data": {
                        "description": "This data will not be interpreted by trivago, but will be provided to the advertiser when a booking submit request is sent. For example this object can be used to store an advertiser 'rate key,’ ‘room key,’ and/or ‘product key’ . It can consist of a nested JSON objects, or a single string or number.",
                        "$ref": "#/components/schemas/partner-data"
                    },
                    "line_items": {
                        "description": "Contains the detailed breakdown of charges. An array of LineItem objects will contain a separate LineItem for each of rate, tax, and fee types.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/line-item"
                        }
                    },
                    "amenities": {
                        "description": "Array of Strings (no html tags allowed). Each String describes an amenity and should be in the language indicated\nby the 'lang' parameter provided in the response.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "value_adds": {
                        "description": "A string value must be one of:\n- FREE_BREAKFAST\n- FREE_HALF_BOARD\n- FREE_FULL_BOARD\n- FREE_ALL_INCLUSIVE\n- FREE_PARKING\n- FREE_INTERNET\nIf no value adds are supported, an empty array has to be provided.",
                        "type": "array",
                        "items": {
                            "enum": [
                                "FREE_BREAKFAST",
                                "FREE_HALF_BOARD",
                                "FREE_FULL_BOARD",
                                "FREE_ALL_INCLUSIVE",
                                "FREE_PARKING",
                                "FREE_INTERNET"
                            ]
                        }
                    },
                    "photos": {
                        "description": "An array of photo objects for the room",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/photo"
                        }
                    },
                    "paymentOptions": {
                        "description": "An array of payment options for the room",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/payment-option"
                        }
                    },
                    "payment_methods": {
                        "description": "Specifies the payment method.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/payment-method"
                        }
                    },
                    "cancellation": {
                        "$ref": "#/components/schemas/cancellation"
                    },
                    "refundable": {
                        "description": "Must be one of:\n- full: Until day of arrival the reservation may be cancelled without any charge to the user.\n- partial: At time of booking, the reservation may be cancelled but will incur a charge less than the total reservation amount.\n- none: At time of booking, the reservation may be cancelled but no refund will be provided.  If the customer has not yet been charged, the full amount will be deducted.\n- unknown: Indicates that the refundable value cannot be identified as one of the other states.",
                        "type": "string",
                        "enum": [
                            "full",
                            "partial",
                            "none",
                            "unknown"
                        ],
                        "deprecated": true
                    },
                    "cancellation_policy": {
                        "description": "Text describing the cancellation policy for the room. Should be in the language indicated by the 'lang'\nparameter. Text field.Length limit: 1000 characters.",
                        "type": "string",
                        "deprecated": true
                    },
                    "cancellation_deadline": {
                        "description": "The datetime after which it is not free to cancel a reservation.The format must match YYYY-MM-DDThh:mm:ss. Note\nthere is no timezone info because it's localized to the property.\nExample: \"cancellation_deadline\": \"2015-05-25T16:00:00\"",
                        "type": "string",
                        "deprecated": true
                    },
                    "occupancy_policy": {
                        "description": "Occupancy policies for this room e.g. maximum number of adults, minimum ages.Text field.Length\nlimit: 1000 characters.",
                        "type": "string"
                    },
                    "payment_policy": {
                        "description": "Describes how the advertiser will use the credit card information, e.g. charged immediately or hold.\n(Length limit: 1000 characters).",
                        "type": "string"
                    },
                    "other_policy": {
                        "description": "Miscellaneous policies.Text field (Length limit: 1000 characters).",
                        "type": "string"
                    },
                    "promotions": {
                        "description": "Array of promotions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/promotion"
                        }
                    }
                },
                "type": "object"
            },
            "occupancy": {
                "title": "Occupancy Object",
                "description": "Schema for an occupancy object",
                "required": [
                    "max_persons",
                    "standard_persons",
                    "max_adults",
                    "max_children",
                    "max_children_age"
                ],
                "properties": {
                    "max_persons": {
                        "description": "The maximum number of persons (adults and children) allowed to stay in the room.",
                        "type": "integer"
                    },
                    "standard_persons": {
                        "description": "The standard occupancy for this room",
                        "type": "integer"
                    },
                    "max_adults": {
                        "description": "The maximum number of adults allowed to stay in the room.",
                        "type": "integer"
                    },
                    "max_children": {
                        "description": "The maximum number of children allowed to stay in the room",
                        "type": "integer"
                    },
                    "max_children_age": {
                        "description": "The maximum age for a person to be considered as child",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "room-group": {
                "title": "RoomGroup Object",
                "description": "Schema for a Room Group object",
                "required": [
                    "code",
                    "name"
                ],
                "properties": {
                    "code": {
                        "description": "A unique room indentifier",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the real room (without amenity/rate relations).",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the real room limited to 1000 characters.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "error-response": {
                "title": "Error Response",
                "description": "Schema response is not OK",
                "required": [
                    "errors",
                    "customer_support"
                ],
                "properties": {
                    "errors": {
                        "description": "Array of errors",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/error"
                        }
                    },
                    "customer_support": {
                        "description": "Contains the hotel’s customer support contact information for guests. Must be returned on both\n     *     successes and failures.",
                        "$ref": "#/components/schemas/customer-support"
                    }
                },
                "type": "object",
                "additionalProperties": false
            }
        },
        "parameters": {
            "reference_id": {
                "name": "reference_id",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "692e8acc-d1d9-45dc-b50f-e7b824f3306f"
                }
            },
            "reservation_id": {
                "name": "reservation_id",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "XXX123"
                }
            },
            "partner_reference": {
                "name": "partner_reference",
                "in": "query",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "1"
                }
            }
        }
    }
}